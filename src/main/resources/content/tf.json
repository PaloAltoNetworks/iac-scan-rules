{
"comment": "!! PLEASE DO NOT EDIT THIS FILE - THIS FILE IS AUTO-GENERATED !!",
"policies": [
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_s3_bucket exists and ($.resource[*].aws_s3_bucket[*].*[*].logging anyNull)",
    "id": "41215510-c504-4752-ab38-0a36e49d55f8",
    "enabled": true,
    "resourceType": "s3",
    "policy": "AWS Access logging not enabled on S3 buckets"
  },
  {
    "severity": "high",
    "rule": "$.resource[*].aws_cloudtrail exists and $.resource[*].aws_cloudtrail[*].*[*].s3_bucket_name equals $.resource[*].aws_s3_bucket_public_access_block[*].*[*].bucket and  ($.resource[*].aws_s3_bucket_public_access_block[*].*[*].block_public_acls isFalse or  $.resource[*].aws_s3_bucket_public_access_block[*].*[*].block_public_policy isFalse)",
    "id": "fc24c16c-f3cc-43b0-aa0e-ba32f5e234d3",
    "enabled": true,
    "resourceType": "AWS_cloudtrail_s3_bucket",
    "policy": "AWS CloudTrail bucket is publicly accessible"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_cloudtrail exists and ($.resource[*].aws_cloudtrail[*].*[*].kms_key_id anyNull or $.resource[*].aws_cloudtrail[*].*[*].kms_key_id anyEmpty)",
    "id": "07a06f60-1532-4e2e-b91c-8f972a96f1a9",
    "enabled": true,
    "resourceType": "cloudtrail",
    "policy": "AWS CloudTrail logs are not encrypted using Customer Master Keys"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_kms_key exists and ( $.resource[*].aws_kms_key[*].*[*].enable_key_rotation anyFalse or  $.resource[*].aws_kms_key[*].*[*].enable_key_rotation anyNull)",
    "id": "497f7e2c-b702-47c7-9a07-f0f6404ac896",
    "enabled": true,
    "resourceType": "kms",
    "policy": "AWS Customer Master Key (CMK) rotation is not enabled"
  },
  {
    "severity": "high",
    "rule": "$.resource[*].aws_default_security_group exists and ($.resource[*].aws_default_security_group[*].*[*].ingress[*].cidr_blocks[*] contains 0.0.0.0/0 or $.resource[*].aws_default_security_group[*].*[*].ingress[*].ipv6_cidr_blocks[*] contains ::/0 or $.resource[*].aws_default_security_group[*].*[*].egress[*].cidr_blocks[*] contains 0.0.0.0/0 or $.resource[*].aws_default_security_group[*].*[*].egress[*].ipv6_cidr_blocks[*] contains ::/0)",
    "id": "c8f6a525-e4ba-4499-b015-15153c797143",
    "enabled": true,
    "resourceType": "security group",
    "policy": "AWS Default Security Group does not restrict all traffic"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_security_group exists and ($.resource[*].aws_security_group[*].*[*].ingress[?( @.protocol == 'tcp' && @.from_port<23 && @.to_port>21 )].cidr_blocks[*] contains 0.0.0.0/0 or $.resource[*].aws_security_group[*].*[*].ingress[?( @.protocol == 'tcp' && @.from_port<23 && @.to_port>21 )].ipv6_cidr_blocks[*] contains ::/0)",
    "id": "c2bcdbe7-7c2c-48bc-a0f7-37e1b9766385",
    "enabled": true,
    "resourceType": "Security Group ingress rule",
    "policy": "AWS EC2 instance have SSH port open to internet"
  },
  {
    "severity": "medium",
    "rule": " $.resource[*].aws_ecs_task_definition exists and $.resource[*].aws_ecs_task_definition[*].*[*].container_definitions exists and ($.resource[*].aws_ecs_task_definition[*].*[*].execution_role_arn anyNull or $.resource[*].aws_ecs_task_definition[*].*[*].execution_role_arn anyEmpty)",
    "id": "a76c8132-7cc3-40b1-a417-d3a41fc44f89",
    "enabled": true,
    "resourceType": "ecs",
    "policy": "AWS ECS task definition execution IAM Role not found"
  },
  {
    "severity": "low",
    "rule": "$.resource[*].aws_ecs_task_definition[*].*[*].container_definitions[?(@.user=='root')] exists",
    "id": "d7cf6d0e-e515-4d0f-b93d-c88932c60172",
    "enabled": true,
    "resourceType": "ECS task definition",
    "policy": "AWS ECS task definition root user found"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_elasticsearch_domain exists and $.resource[*].aws_elasticsearch_domain[*].*[*].vpc_options does not exist",
    "id": "28ee2708-305a-4b23-acf0-535ab45b96ab",
    "enabled": true,
    "resourceType": "elasticsearch",
    "policy": "AWS ElasticSearch cluster not in a VPC"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_iam_account_password_policy[*].*[*].password_reuse_prevention == 0",
    "id": "c6921472-260e-460a-aa55-77e69e2ee0ba",
    "enabled": true,
    "resourceType": "iam_account_password_policy",
    "policy": "AWS IAM password policy allows password reuse"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_iam_account_password_policy[*].*[?( @.max_password_age>90 )] is not empty",
    "id": "cb4e7ef6-b4b4-45a5-9ae5-194d3a0e12e9",
    "enabled": true,
    "resourceType": "iam_account_password",
    "policy": "AWS IAM password policy does not expire in 90 days"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_iam_account_password_policy[*].*[?( @.minimum_password_length<14 )] is not empty",
    "id": "7228106b-f82f-4d2e-a1a0-73fd15f70637",
    "enabled": true,
    "resourceType": "iam_account_password",
    "policy": "AWS IAM password policy does not have a minimum of 14 characters"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_iam_account_password_policy[*].*[*].require_lowercase_characters anyFalse",
    "id": "77c2d5a8-071f-48b9-9de0-5917e9b4548d",
    "enabled": true,
    "resourceType": "iam_account_password",
    "policy": "AWS IAM password policy does not have a lowercase character"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_iam_account_password_policy[*].*[*].require_numbers anyFalse",
    "id": "41fdae49-6fc7-4bc9-80e4-2cbb2262ab7a",
    "enabled": true,
    "resourceType": "iam_account_password",
    "policy": "AWS IAM password policy does not have a number"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_iam_account_password_policy[*].*[*].require_symbols anyFalse",
    "id": "f8013bbf-21b8-4e81-b6ef-7b568407129c",
    "enabled": true,
    "resourceType": "iam_account_password",
    "policy": "AWS IAM password policy does not have a symbol"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_iam_account_password_policy[*].*[*].require_uppercase_characters anyFalse",
    "id": "d6dadfcf-a98c-4917-97b5-a5df6a9c493d",
    "enabled": true,
    "resourceType": "iam_account_password",
    "policy": "AWS IAM password policy does not have a uppercase character"
  },
  {
    "severity": "low",
    "rule": "$.resource[*].aws_iam_policy_attachment[*].*[*].users exists and $.resource[*].aws_iam_policy_attachment[*].*[*].users[*] is not empty",
    "id": "1903f355-b68f-4d9c-84dd-c46abe4f8673",
    "enabled": true,
    "resourceType": "iam_policy_attachment",
    "policy": "AWS IAM policy attached to users"
  },
  {
    "severity": "high",
    "rule": "$.resource[*].aws_eks_cluster[*].*[*].version anyStartWith 1.9.",
    "id": "60440266-3d03-41ce-ba8c-d51ccbdb6804",
    "enabled": true,
    "resourceType": "eks",
    "policy": "AWS Kubernetes unsupported master node version"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_db_instance exists and ( $.resource[*].aws_db_event_subscription !exists or $.resource[*].aws_db_event_subscription[*].*[?(@.source_type=='db-security-group')] anyNull  or not $.resource[*].aws_db_event_subscription[*].*[?(@.source_type=='db-security-group')].enabled anyNull or $.resource[*].aws_db_event_subscription[*].*[?(@.source_type=='db-security-group')].enabled anyTrue )",
    "id": "b81ceb53-e21a-4456-a35b-ece94323637b",
    "enabled": true,
    "resourceType": "aws_db_event_subscription",
    "policy": "AWS RDS event subscription disabled for DB security groups"
  },
  {
    "severity": "high",
    "rule": "$.resource[*].aws_db_instance exists and ($.resource[*].aws_db_instance[*].*[*].publicly_accessible !exists  or $.resource[*].aws_db_instance[*].*[*].publicly_accessible anyTrue)",
    "id": "054e0760-d0e2-454a-8898-015e9e9fbc1a",
    "enabled": true,
    "resourceType": "rds",
    "policy": "AWS RDS snapshots are accessible to public"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_redshift_parameter_group exists and ($.resource[*].aws_redshift_parameter_group[*].*[*].parameter[?(@.name=='require_ssl')] !exists  or $.resource[*].aws_redshift_parameter_group[*].*[*].parameter[?(@.name=='require_ssl' && @.value=='false' )] exists)",
    "id": "2ff03f80-c9f6-4a37-b8b1-1212965e352d",
    "enabled": true,
    "resourceType": "redshift",
    "policy": "AWS Redshift does not have require_ssl configured"
  },
  {
    "severity": "low",
    "rule": "$.resource[*].aws_cloudtrail[*].*[*].enable_logging anyFalse",
    "id": "82578260-f754-4e0e-ba6b-a06b9e36ad5b",
    "enabled": true,
    "resourceType": "AWS S3 cloudtrail logging",
    "policy": "AWS S3 CloudTrail buckets for which access logging is disabled"
  },
  {
    "severity": "high",
    "rule": "$.resource[*].aws_s3_bucket exists and ($.resource[*].aws_s3_bucket.*[*].*.acl anyEqual public-read-write or $.resource[*].aws_s3_bucket.*[*].*.acl anyEqual public-read)",
    "id": "ded75b65-7ef6-4239-a08f-d4d9a4eb218b",
    "enabled": true,
    "resourceType": "s3",
    "policy": "AWS S3 buckets are accessible to public"
  },
  {
    "severity": "medium",
    "rule": " $.resource[*].aws_s3_bucket exists and ($.resource[*].aws_s3_bucket.*[*].*.versioning[*].enabled does not exist or $.resource[*].aws_s3_bucket.*[*].*.versioning[*].enabled anyFalse)",
    "id": "1914c65c-2406-4261-88cd-fbeb684a15dc",
    "enabled": true,
    "resourceType": "s3",
    "policy": "AWS S3 object versioning is disabled"
  },
  {
    "severity": "high",
    "rule": "$.resource[*].aws_security_group exists and ($.resource[*].aws_security_group[*].*[*].ingress[?( @.protocol == 'tcp' && @.from_port<3390 && @.to_port>3388 )].cidr_blocks[*] contains 0.0.0.0/0 or $.resource[*].aws_security_group[*].*[*].ingress[?( @.protocol == 'tcp' && @.from_port<3390 && @.to_port>3388)].ipv6_cidr_blocks[*] contains ::/0)",
    "id": "1796efe6-802d-4768-8c17-7491c560b686",
    "enabled": true,
    "resourceType": "security group",
    "policy": "AWS Security Groups allow internet traffic from internet to RDP port (3389)"
  },
  {
    "severity": "high",
    "rule": "$.resource[*].aws_security_group exists and ($.resource[*].aws_security_group[*].*[*].ingress[?( @.protocol == 'tcp' && @.from_port<23 && @.to_port>21 )].cidr_blocks[*] contains 0.0.0.0/0 or $.resource[*].aws_security_group[*].*[*].ingress[?( @.protocol == 'tcp' && @.from_port<23 && @.to_port>21 )].ipv6_cidr_blocks[*] contains ::/0)",
    "id": "9745cb18-32f9-4411-a59c-fae4ffa362ce",
    "enabled": true,
    "resourceType": "security group",
    "policy": "AWS Security Groups allow internet traffic to SSH port (22)"
  },
  {
    "severity": "high",
    "rule": "($.resource[*].aws_security_group exists and ($.resource[*].aws_security_group.*[*].*.ingress[*].protocol equals -1 and ($.resource[*].aws_security_group.*[*].*.ingress[*].cidr_blocks[*] contains 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.ingress[*].ipv6_cidr_blocks[*] contains ::/0))) or ($.resource[*].aws_security_group_rule exists and ($.resource[*].aws_security_group_rule.*[*].*.protocol equals -1 and $.resource[*].aws_security_group_rule.*[*].*.type equals ingress and ($.resource[*].aws_security_group_rule.*[*].*.cidr_blocks[*] contains 0.0.0.0/0 or $.resource[*].aws_security_group_rule.*[*].*.ipv6_cidr_blocks[*] contains ::/0)))",
    "id": "eba4d571-4338-4f62-8110-9be6c4b47fd0",
    "enabled": true,
    "resourceType": "security group",
    "policy": "AWS Security Groups with Inbound rule overly permissive to All Traffic"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_network_acl exists and $.resource[*].aws_network_acl.*[*].*.egress[?(@.protocol == 'tcp' && @.from_port == '22' && @.to_port == '22')].action==allow or $.resource[*].aws_network_acl.*[*].*.egress[?(@.protocol == 'tcp' && @.from_port == '21' && @.to_port == '21')].action==allow or $.resource[*].aws_network_acl.*[*].*.egress[?(@.protocol == 'udp' && @.from_port == '135' && @.to_port == '135')].action==allow or $.resource[*].aws_network_acl.*[*].*.egress[?(@.protocol == 'tcp' && @.from_port == '445' && @.to_port == '445')].action==allow or $.resource[*].aws_network_acl.*[*].*.egress[?(@.protocol == '-1' && @.from_port == '137' && @.to_port == '139')].action==allow or $.resource[*].aws_network_acl.*[*].*.egress[?(@.protocol == 'udp' && @.from_port == '69' && @.to_port == '69')].action==allow",
    "id": "de727ef6-60b0-46b9-a056-29830952c986",
    "enabled": true,
    "resourceType": "AWS NACL egress rules",
    "policy": "AWS VPC NACL allow egress traffic from blocked ports"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_network_acl exists and $.resource[*].aws_network_acl.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '22' && @.to_port == '22')].action==allow or $.resource[*].aws_network_acl.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '21' && @.to_port == '21')].action==allow or $.resource[*].aws_network_acl.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '5800' && @.to_port == '5800')].action==allow or $.resource[*].aws_network_acl.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '5900' && @.to_port == '5903')].action==allow or  $.resource[*].aws_network_acl.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '2323' && @.to_port == '2323')].action==allow or $.resource[*].aws_network_acl.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '23' && @.to_port == '23')].action==allow or $.resource[*].aws_network_acl.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '25' && @.to_port == '25')].action==allow or $.resource[*].aws_network_acl.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '110' && @.to_port == '110')].action==allow or $.resource[*].aws_network_acl.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '143' && @.to_port == '143')].action==allow or $.resource[*].aws_network_acl.*[*].*.ingress[?(@.protocol == '-1' && @.from_port == '53' && @.to_port == '53')].action==allow or $.resource[*].aws_network_acl.*[*].*.ingress[?(@.protocol == 'udp' && @.from_port == '135' && @.to_port == '135')].action==allow or $.resource[*].aws_network_acl.*[*].*.ingress[?(@.protocol == '-1' && @.from_port == '137' && @.to_port == '139')].action==allow or $.resource[*].aws_network_acl.*[*].*.ingress[?(@.protocol == 'udp' && @.from_port == '69' && @.to_port == '69')].action==allow",
    "id": "1cc0ec13-4079-4e27-b597-9edf83a1cd93",
    "enabled": true,
    "resourceType": "AWS VPC NACL allow traffic",
    "policy": "AWS VPC NACL allows traffic from blocked ports"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_vpc_peering_connection[*].*[*].peer_vpc_id does not equal $.resource[*].aws_vpc_peering_connection[*].*[*].vpc_id",
    "id": "59356130-d856-470d-a08e-b2a0ba2a4ac7",
    "enabled": true,
    "resourceType": "vpc",
    "policy": "AWS VPC allows unauthorized peering"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_security_group exists and $.resource[*].aws_security_group.*[*].*.egress[?(@.protocol == 'tcp' && @.from_port == '22' && @.to_port == '22')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.egress[?(@.protocol == 'tcp' && @.from_port == '22' && @.to_port == '22')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.egress[?(@.protocol == 'tcp' && @.from_port == '21' && @.to_port == '21')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.egress[?(@.protocol == 'tcp' && @.from_port == '21' && @.to_port == '21')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.egress[?(@.protocol == 'tcp' && @.from_port == '445' && @.to_port == '445')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.egress[?(@.protocol == 'tcp' && @.from_port == '445' && @.to_port == '445')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.egress[?(@.protocol == 'udp' && @.from_port == '135' && @.to_port == '135')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.egress[?(@.protocol == 'udp' && @.from_port == '135' && @.to_port == '135')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.egress[?(@.protocol == '-1' && @.from_port == '137' && @.to_port == '139')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.egress[?(@.protocol == '-1' && @.from_port == '137' && @.to_port == '139')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.egress[?(@.protocol == 'udp' && @.from_port == '69' && @.to_port == '69')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.egress[?(@.protocol == 'udp' && @.from_port == '69' && @.to_port == '69')].ipv6_cidr_blocks[*] == ::/0 ",
    "id": "2b47072f-0d2b-45a5-aa2d-1db80974176e",
    "enabled": true,
    "resourceType": "Security Group egress traffic",
    "policy": "AWS security group allow egress traffic from blocked ports - 21,22,135,137-139,445,69"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '22' && @.to_port == '22')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '22' && @.to_port == '22')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '21' && @.to_port == '21')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '21' && @.to_port == '21')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '5800' && @.to_port == '5800')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '5800' && @.to_port == '5800')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '5900' && @.to_port == '5903')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '5900' && @.to_port == '5903')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '2323' && @.to_port == '2323')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '2323' && @.to_port == '2323')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '23' && @.to_port == '23')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '23' && @.to_port == '23')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '25' && @.to_port == '25')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '25' && @.to_port == '25')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '110' && @.to_port == '110')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '110' && @.to_port == '110')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '143' && @.to_port == '143')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'tcp' && @.from_port == '143' && @.to_port == '143')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == '-1' && @.from_port == '53' && @.to_port == '53')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == '-1' && @.from_port == '53' && @.to_port == '53')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'udp' && @.from_port == '135' && @.to_port == '135')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'udp' && @.from_port == '135' && @.to_port == '135')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == '-1' && @.from_port == '137' && @.to_port == '139')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == '-1' && @.from_port == '137' && @.to_port == '139')].ipv6_cidr_blocks[*] == ::/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'udp' && @.from_port == '69' && @.to_port == '69')].cidr_blocks[*] == 0.0.0.0/0 or $.resource[*].aws_security_group.*[*].*.ingress[?(@.protocol == 'udp' && @.from_port == '69' && @.to_port == '69')].ipv6_cidr_blocks[*] == ::/0",
    "id": "9731fe16-636f-477a-b083-6d90c66d2c0b",
    "enabled": true,
    "resourceType": "AWS security group ingress ports",
    "policy": "AWS security group allows traffic from blocked ports"
  },
  {
    "severity": "high",
    "rule": "($.resource[*].azurerm_network_security_rule exists and ($.resource[*].azurerm_network_security_rule.*[*].*.access contains Allow and $.resource[*].azurerm_network_security_rule.*[*].*.destination_address_prefix contains * and $.resource[*].azurerm_network_security_rule.*[*].*.source_address_prefix contains * and $.resource[*].azurerm_network_security_rule.*[*].*.destination_port_range contains 22 and $.resource[*].azurerm_network_security_rule.*[*].*.direction contains Inbound))",
    "id": "1eb0cd02-789a-4b96-8463-fb5583e40585",
    "enabled": true,
    "resourceType": "nsg",
    "policy": "Azure Network Security Group (NSG) allows SSH traffic from internet on port 22"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].google_container_cluster.*.*[*].enable_legacy_abac anyTrue",
    "id": "3a8dde2f-ee02-4d51-bcd1-b119c0207226",
    "enabled": true,
    "resourceType": "kubernetes engine",
    "policy": "GCP Kubernetes Engine Clusters have Legacy Authorization enabled"
  },
  {
    "severity": "medium",
    "rule": "$.resource.*.google_container_cluster.*.*.*.master_auth exists and not ($.resource.*.google_container_cluster.*.*.*.master_auth.*.password is empty and $.resource.*.google_container_cluster.*.*.*.master_auth.*.username is empty)",
    "id": "b6b3b461-767c-43f5-b608-b84e8c40fa88",
    "enabled": true,
    "resourceType": "kubernetes engine",
    "policy": "GCP Kubernetes engine clusters have enabled basic authentication"
  },
  {
    "severity": "low",
    "rule": "$.resource[*].google_container_cluster exists and ($.resource[*].google_container_cluster.*[*].*.addons_config[*].http_load_balancing[*].disabled anyTrue)",
    "id": "afb8ee15-96a4-4f32-83a5-c5f60c49de75",
    "enabled": true,
    "resourceType": "kubernetes engine",
    "policy": "GCP Kubernetes Engine Clusters have HTTP load balancing disabled"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].google_container_cluster exists and  ($.resource[*].google_container_cluster.*[*].*.network_policy anyNull or $.resource[*].google_container_cluster.*[*].*.addons_config[*].network_policy_config anyNull or $.resource[*].google_container_cluster.*[*].*.addons_config[*].network_policy_config[*].disabled anyNull or $.resource[*].google_container_cluster.*[*].*.addons_config[*].network_policy_config[*].disabled anyTrue) ",
    "id": "ca78ea0f-83ec-4401-9c33-300215ebe7b3",
    "enabled": true,
    "resourceType": "kubernetes engine",
    "policy": "GCP Kubernetes Engine Clusters have Network policy disabled"
  },
  {
    "severity": "low",
    "rule": "$.resource[*].google_container_cluster exists and  ($.resource[*].google_container_cluster.*[*].*.private_cluster_config anyNull or $.resource[*].google_container_cluster.*[*].*.private_cluster_config[*].enable_private_nodes anyNull or $.resource[*].google_container_cluster.*[*].*.private_cluster_config[*].enable_private_nodes anyFalse) ",
    "id": "33a04b8d-970b-43c3-b584-c704695178ed",
    "enabled": true,
    "resourceType": "kubernetes engine",
    "policy": "GCP Kubernetes Engine Clusters not configured with private cluster"
  },
  {
    "severity": "low",
    "rule": "$.resource[*].google_container_node_pool exists and  ($.resource[*].google_container_node_pool.*[*].*.node_config anyNull or $.resource[*].google_container_node_pool.*[*].*.node_config[*].image_type anyNull or  not $.resource[*].google_container_node_pool.*[*].*.node_config[*].image_type allStartWith  cos ) ",
    "id": "b80d079e-9db6-440e-a35a-64e53e47e6fc",
    "enabled": true,
    "resourceType": "kubernetes engine",
    "policy": "GCP Kubernetes Engine Clusters not using container optimized OS for node image"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].google_container_cluster exists and ($.resource[*].google_container_cluster[*].*[*].database_encryption anyNull or  $.resource[*].google_container_cluster[*].*[*].database_encryption[*].state any equal DECRYPTED)",
    "id": "7ece6176-027f-4cf7-885e-555d11786c27",
    "enabled": true,
    "resourceType": "kubernetes engine",
    "policy": "GCP Kubernetes cluster Application-layer Secrets not encrypted"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].google_container_cluster exists and ($.resource[*].google_container_cluster.*[*].*.addons_config anyNull or $.resource[*].google_container_cluster.*[*].*.addons_config[*].istio_config anyNull or $.resource[*].google_container_cluster.*[*].*.addons_config[*].istio_config[*] anyNull  or  $.resource[*].google_container_cluster.*[*].*.addons_config[*].istio_config[*].disabled anyNull or  $.resource[*].google_container_cluster.*[*].*.addons_config[*].istio_config[*].disabled anyTrue)",
    "id": "6afc115a-d9f9-45e8-9716-6a4204621074",
    "enabled": true,
    "resourceType": "kubernetes engine",
    "policy": "GCP Kubernetes cluster istioConfig not enabled"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].google_container_cluster[*].*[*].node_config anyNull or $.resource[*].google_container_cluster[*].*[*].node_config[*].service_account anyNull",
    "id": "f125951d-f5c0-4ca6-aab2-d443485e04a1",
    "enabled": true,
    "resourceType": "k8s container cluster service account",
    "policy": "GCP Kubernetes Engine Cluster Nodes have default Service accounts for project access"
  },
  {
    "severity": "low",
    "rule": "$.resource[*].google_container_cluster exists and $.resource[*].google_container_cluster[*].*.*.ip_allocation_policy does not exist",
    "id": "33104909-45f5-4533-8b71-d54716dc7184",
    "enabled": true,
    "resourceType": "kubernetes engine",
    "policy": "GCP Kubernetes Engine Clusters have Alias IP disabled"
  },
  {
    "severity": "low",
    "rule": "$.resource[*].google_container_cluster.*[*].*.pod_security_policy_config anyNull or $.resource[*].google_container_cluster.*[*].*.pod_security_policy_config.enabled anyFalse",
    "id": "b24c52e5-948c-4335-b8e0-c44b86b69538",
    "enabled": true,
    "resourceType": "GCP k8s pod_security",
    "policy": "GCP Kubernetes Engine Clusters have pod security policy disabled"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].google_container_cluster exists and $.resource[*].google_container_cluster.*[*].*.addons_config[*].kubernetes_dashboard[*].disabled anyFalse",
    "id": "243d8c63-97cf-434a-b75e-2a84c57fdc37",
    "enabled": true,
    "resourceType": "kubernetes engine",
    "policy": "GCP Kubernetes Engine Clusters web UI/Dashboard is set to Enabled"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].google_storage_bucket_access_control[*].*[*].entity contains allUsers",
    "id": "0716cf97-9f82-46ae-8b35-09f2ee41d136",
    "enabled": true,
    "resourceType": "google_storage_bucket_access_control",
    "policy": "GCP storage bucket are publicly accessible to all users"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].google_storage_bucket exists and ($.resource[*].google_storage_bucket.*[*].*.versioning anyNull or $.resource[*].google_storage_bucket.*[*].*.versioning[*].enabled anyNull or $.resource[*].google_storage_bucket.*[*].*.versioning[*].enabled anyFalse)",
    "id": "53a9b6e1-dd93-4110-b443-4658c13134b4",
    "enabled": true,
    "resourceType": "storage",
    "policy": "GCP Storage log buckets have object versioning disabled"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].google_compute_instance_template[*].*.[*].can_ip_forward anyTrue",
    "id": "c52cef1e-cb56-43dc-8708-fbff0e64b59a",
    "enabled": true,
    "resourceType": "GCP VM instances",
    "policy": "GCP VM instances have IP forwarding enabled"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].google_compute_subnetwork[*].*[*].private_ip_google_access anyNull or $.resource[*].google_compute_subnetwork[*].*[*].private_ip_google_access anyFalse",
    "id": "1af7b784-5c6c-43c0-a736-dc5e47cc235a",
    "enabled": true,
    "resourceType": "google compute subnetwork",
    "policy": "GCP VPC network subnets have Private Google access disabled"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].google_project[*].*[*].auto_create_network anyTrue or  $.resource[*].google_project[*].*[*].auto_create_network anyNull",
    "id": "2d372220-3125-48ec-915b-30f0fc5220fb",
    "enabled": true,
    "resourceType": "Google Project",
    "policy": "GCP project is using default network"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].google_sql_database_instance[*].*[*].settings[*].ip_configuration[*].authorized_networks[*].value anyEqual 0.0.0.0/0 or $.resource[*].google_sql_database_instance[*].*[*].settings[*].ip_configuration[*].authorized_networks[*].value anyEqual ::/0",
    "id": "32865329-308b-4a18-bcf5-fe71423d8770",
    "enabled": true,
    "resourceType": "GCP SQL DB Instance",
    "policy": "SQL instances with network authorization exposing them to the internet"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].azurerm_storage_account exists and ($.resource[*].azurerm_storage_account.*[*].*.enable_https_traffic_only anyNull or $.resource[*].azurerm_storage_account.*[*].*.enable_https_traffic_only anyFalse)",
    "id": "80f6dc01-4aaa-4712-a7bf-70e103fea4a3",
    "enabled": true,
    "resourceType": "storage",
    "policy": "Storage Accounts without Secure transfer enabled"
  },
  {
    "severity": "medium",
    "rule": "$.resource[*].google_storage_bucket exists and ($.resource[*].google_storage_bucket.*[*].*.logging anyNull or $.resource[*].google_storage_bucket.*[*].*.logging[*].log_bucket anyEmpty)",
    "id": "22df2129-f6bf-4a10-9118-42b8d5d922a9",
    "enabled": true,
    "resourceType": "storage",
    "policy": "Storage Bucket does not have Access and Storage Logging enabled"
  }
]
}